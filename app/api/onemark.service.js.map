{"version":3,"file":"onemark.service.js","sourceRoot":"","sources":["../../src-api/api/onemark.service.ts"],"names":[],"mappings":";;AAGA,+CAA2D;AAC3D,uDAAsE;AAOtE,MAAM,cAAc,GAAG,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAyB;IAEtF,IAAI,gBAAgB,GAAoB,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,CAAA;IAC5F,IAAI,iBAAiB,GAAuB,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,CAAA;IAC1F,IAAI,MAAM,GAAG,EAAE,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;IACnG,IAAI,GAAG,GAAG,IAAI,wBAAU,CAAC,gBAAgB,CAAC,CAAA;IAE1C,IAAI,OAAO,GAAG;QACZ,MAAM,EAAE;YACN,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,0BAAW,CAAC,iBAAiB,CAAC,EAAE;YAClE,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,CAAC,CAAC,CAAC,EAAE;YACtE,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,OAAO,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA,CAAC,CAAC,CAAC,EAAE;SACxE;KACF,CAAA;IAED,MAAM,CAAC;QACL,GAAG;YACD,GAAG,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAA;QACpC,CAAC;KACF,CAAA;AACH,CAAC,CAAA;AAEQ,wCAAc","sourcesContent":["// Copyright (c) Wael Rabadi. All rights reserved.\r\n// See LICENSE for details.\r\n\r\nimport { OnemarkApi, IExpressOptions } from \"./onemark-api\"\r\nimport { MarksRouter, IMarksRouterOption } from \"./marks/marks.router\"\r\nimport { ITracer } from \"../modules/tracer\";\r\n\r\ninterface IOnemarkServiceOption extends IExpressOptions {\r\n  markDataPath: String\r\n}\r\n\r\nconst OnemarkService = ({ tracer, port, bodyLimit, markDataPath }: IOnemarkServiceOption) => {\r\n\r\n  let onemarkApiOption: IExpressOptions = { tracer: tracer, port: port, bodyLimit: bodyLimit }\r\n  let marksRouterOption: IMarksRouterOption = { tracer: tracer, markDataPath: markDataPath }\r\n  let envRes = { onemark_api_url: process.env.ONEMARK_API_URL, design_mode: process.env.DESIGN_MODE }\r\n  let api = new OnemarkApi(onemarkApiOption)\r\n\r\n  let options = {\r\n    routes: [\r\n      { template: \"/api/marks\", router: MarksRouter(marksRouterOption) },\r\n      { template: \"/api/env\", router: ((req, res) => { res.json(envRes) }) },\r\n      { template: \"/\", router: ((req, res) => { res.send(\"Hello world!\") }) }\r\n    ]\r\n  }\r\n\r\n  return {\r\n    run() {\r\n      api.init().register(options).run()\r\n    }\r\n  }\r\n}\r\n\r\nexport { OnemarkService, IOnemarkServiceOption }"]}