{"version":3,"file":"marks.router.js","sourceRoot":"","sources":["../../../src-api/api/marks/marks.router.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Wael Rabadi. All rights reserved.\r\n// See LICENSE for details.\r\n\r\nimport { Router } from \"express\";\r\nimport { IMarksController } from \"../marks/marks.domain\";\r\nimport { ITracer } from \"../../modules/tracer\"\r\n\r\nimport { MarksListRepo as MarksRepo, IMarksListRepoOption } from \"../context/file/marks.repo\";\r\nimport { MarksController as Controller } from \"../marks/marks.controller\";\r\n\r\nconst MarksRouteHandler = (controller: IMarksController, tracer: ITracer) => {\r\n\r\n  const router = Router();\r\n\r\n  const handleError = (err, res) => {\r\n    console.log(err.message);\r\n    res.status(400).json({ error: err.message });\r\n  };\r\n\r\n  // middleware that is specific to this router\r\n  router.use(function timeLog(req, res, next) {\r\n    if (tracer) {\r\n      //tracer.info(`Time: ${Date.now()} - ${req.method} - body(${JSON.stringify(req.body)})`);\r\n      tracer.info(`${req.method} - body(${JSON.stringify(req.body)})`);\r\n    }\r\n    next();\r\n  });\r\n\r\n  router.route(\"/\")\r\n    .get((req, res) => {\r\n      controller.getAll()\r\n        .then((data) => {\r\n          res.setHeader(\"Content-Type\", \"application/json;charset=utf-8\");\r\n          res.send(data);\r\n        })\r\n        .catch((err) => handleError(err, res));\r\n    })\r\n    .post((req, res) => {\r\n      controller.create(req.body)\r\n        .then((v) => res.send(v))\r\n        .catch((err) => res.sendStatus(400).send(err));\r\n    });\r\n\r\n  router.route(\"/:id\")\r\n    .get((req, res) => {\r\n      controller.get(req.params.id)\r\n        .then((data) => {\r\n          res.setHeader(\"Content-Type\", \"application/json;charset=utf-8\");\r\n          if (!data.data || data.data.length === 0) {\r\n            res.status(404); // not found\r\n          }\r\n          res.send(data);\r\n        })\r\n        .catch((err) => handleError(err, res));\r\n    })\r\n    .delete((req, res) => {\r\n      controller.delete(req.params.id)\r\n        .then(() => res.status(200).json())\r\n        .catch((err) => handleError(err, res));\r\n\r\n    });\r\n\r\n  return router\r\n}\r\n\r\nexport interface IMarksRouterOption {\r\n  tracer: ITracer,\r\n  markDataPath: String\r\n}\r\n\r\nexport const MarksRouter = ({ tracer, markDataPath }: IMarksRouterOption) => {\r\n  let marksRepoOption: IMarksListRepoOption = { tracer: tracer, markDataPath: markDataPath }\r\n  return MarksRouteHandler(new Controller(new MarksRepo(marksRepoOption)), tracer)\r\n}\r\n"]}