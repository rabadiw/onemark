{"version":3,"file":"tracer.js","sourceRoot":"","sources":["../../src-api/modules/tracer.ts"],"names":[],"mappings":";;AAUA,IAAK,MAKJ;AALD,WAAK,MAAM;IACT,qCAAK,CAAA;IACL,mCAAI,CAAA;IACJ,mCAAI,CAAA;IACJ,qCAAK,CAAA;AACP,CAAC,EALI,MAAM,KAAN,MAAM,QAKV;AAOD,uBAAuB,GAAG;IAMxB,MAAM,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,IAAI,EAAE,CAAA;AACjE,CAAC;AAED,MAAM,GAAG,GAAG,CAAC,KAAa,EAAE,GAAW;IACrC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;AAC3E,CAAC,CAAA;AAED,IAAI,MAAM,GAAY,EAAa,CAAA;AAOjB,wBAAM;AALxB,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAA,CAAC,CAAC,CAAA;AACxD,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAA,CAAC,CAAC,CAAA;AACxD,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAA,CAAC,CAAC,CAAA;AAC1D,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAA,CAAC,CAAC,CAAA","sourcesContent":["// Copyright (c) Wael Rabadi. All rights reserved.\r\n// See LICENSE for details.\r\n\r\ninterface ITracer extends Object {\r\n  info: (msg: string) => void\r\n  warn: (msg: string) => void\r\n  error: (msg: string) => void\r\n  debug: (msg: string) => void\r\n}\r\n\r\nenum Levels {\r\n  error,\r\n  warn,\r\n  info,\r\n  debug\r\n}\r\n\r\n// function pad(val: number, zeros?: number) {\r\n//   zeros = zeros || 2;\r\n//   return (new Array(zeros + 1).join('0') + val).substr(-zeros, zeros);\r\n// }\r\n\r\nfunction formatConsole(msg) {\r\n  // var ts =\r\n  //   pad(msg.date.getHours()) + ':' +\r\n  //   pad(msg.date.getMinutes()) + ':' +\r\n  //   pad(msg.date.getSeconds()) + ':' +\r\n  //   pad(msg.date.getMilliseconds(), 4);\r\n  return `[${msg.date.toISOString()}] [${msg.level}] ${msg.text}`\r\n}\r\n\r\nconst log = (level: string, msg: string) => {\r\n  console.log(formatConsole({ date: new Date(), level: level, text: msg }))\r\n}\r\n\r\nlet tracer: ITracer = {} as ITracer\r\n\r\ntracer.info = (msg) => { log(Levels[Levels.info], msg) }\r\ntracer.warn = (msg) => { log(Levels[Levels.warn], msg) }\r\ntracer.error = (msg) => { log(Levels[Levels.error], msg) }\r\ntracer.debug = (msg) => { log(Levels[Levels.debug], msg) }\r\n\r\nexport { ITracer, tracer }\r\n"]}